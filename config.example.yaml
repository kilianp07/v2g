mqtt:
  broker: "tcp://localhost:1883"
  client_id: "v2g-dispatcher"
  username: ""
  password: ""
  ack_topic: "vehicle/+/ack"
  use_tls: false
dispatch:
  ack_timeout_seconds: 5
  lp_first:
    "0": true # FCR
  enable_soc_constraints: true
  min_soc: 0.1
  safe_discharge_floor: 0.1
  segments:
    commuter:
      dispatcher_type: "heuristic"
    captive_fleet:
      dispatcher_type: "lp"
      fallback: true
    opportunistic_charger:
      dispatcher_type: "heuristic"
      fallback: true
metrics:
  prometheus_enabled: true
  prometheus_port: ":2112"
  influx_enabled: true
  influx_url: "http://influxdb:8086"
  influx_token: "secret"
  influx_org: "my-org"
  influx_bucket: "v2g"
  emission_factor: 50 # gCO2 per kWh
telemetry:
  enabled: true
  mode: "push" # push | pull | hybrid
  interval_seconds: 10
  request_topic: "v2g/telemetry/request"
  response_topic_prefix: "v2g/telemetry/response/"
  state_topic_prefix: "v2g/vehicle/state/"
  timeout_seconds: 3
logging:
  backend: "jsonl" # or 'sqlite'
  path: "dispatch.log"
  max_size_mb: 10
  max_backups: 5
  max_age_days: 7
rte:
  mode: "mock" # or 'client'
  mock:
    address: ":8081"
  client:
    api_url: "https://api.rte.com"
    client_id: ""
    client_secret: ""
    token_url: "https://auth.rte.com/token"
    poll_interval_seconds: 60
rteGenerator:
  enabled: false
  mode: "internal"
  scenario: "steady"
  min_interval_seconds: 120
  max_interval_seconds: 300
  min_duration_seconds: 120
  max_duration_seconds: 600
  min_power_kw: 5
  max_power_kw: 25
  signal_types: ["FCR"]
  jitter_pct: 0.15
  seed: 42
sentry:
  dsn: "https://examplePublicKey@o0.ingest.sentry.io/0"
  environment: "preprod"
  traces_sample_rate: 0.2
  release: "v2g@0.1.0"
